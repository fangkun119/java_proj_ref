<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 动态工厂 -->
    <!-- 先注入工厂Bean，再调用其成员函数（non-static）来注入Car bean -->
    <bean id="dynamicCarFactory" class="com.javaref.spring.CarFactory">
        <!-- 如果CarFactory有setAttrName方法，可以用property注入来调用该方法 -->
        <!-- <property name="attrName" value="attrVal"></property>      -->
    </bean>
    <bean id="car1" factory-bean="dynamicCarFactory" factory-method="getCar">
        <!-- 传给getCar方法参数name的值时"audi"，用于构造Car对象 -->
        <constructor-arg name="name" value="audi"></constructor-arg>
    </bean>
    <bean id="car2" factory-bean="dynamicCarFactory" factory-method="getCar">
        <!-- 传给getCar方法参数name的值时"audi"，用于构造Car对象 -->
        <constructor-arg name="name" value="audi"></constructor-arg>
    </bean>

    <!-- 静态工厂 -->
    <!-- 注入bean car，该bean直接调用CarFactory.getCarStatic静态函数创建 -->
    <bean id="car3" class="com.javaref.spring.CarFactory" factory-method="getCarStatic" >
        <!-- 传给getCarStatic方法参数name的值时"audi"，用于构造Car对象 -->
    	<constructor-arg value="audi"></constructor-arg>
    </bean>
    <bean id="car4" class="com.javaref.spring.CarFactory" factory-method="getCarStatic" >
        <constructor-arg value="audi"></constructor-arg>
    </bean>
</beans>


